name: "Tests"

on:
  pull_request:
    branches:
      - master
    paths:
      - '**.php'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - '.github/workflows/tests.yaml'
  push:
    branches:
      - master
    paths:
      - '**.php'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - '.github/workflows/tests.yaml'

env:
  CONSUL_HTTP_ADDR: "127.0.0.1:8500"
  CONSUL_VERSION: '1.20.5'

jobs:
  tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4'

    name: Tests - PHP ${{ matrix.php-version }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Define vars'
        id: vars
        shell: bash -e {0}
        # language=sh
        run: |
          _phpunit_version=
          case "${{ inputs.php-version }}" in
            8.1) _phpunit_version='10.5' ;;
            8.2) _phpunit_version='11.1' ;;
            8.3) _phpunit_version='11.1' ;;
            8.4) _phpunit_version='11.1' ;;
            *) echo "Unsupported PHP version: ${{ inputs.php-version }}" && exit 1 ;;
          esac
          echo "phpunit-version=${_phpunit_version}" >> $GITHUB_OUTPUT

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json
          ini-values: precision=14,serialize_precision=-1

      - name: 'Install jq'
        uses: dcarbone/install-jq-action@v3
        with:
          force: true

      - name: 'Set composer dep versions'
        shell: bash -e {0}
        # language=sh
        run: |
          tmpf="$(mktemp)"
          jq -rcM '."require-dev"."phpunit/phpunit" = "^${{ steps.vars.outputs.phpunit-version }}"' composer.json > "${tmpf}"
          mv "${tmpf}" composer.json

      - name: 'Get composer cache directory'
        id: composer-cache
        shell: bash -e {0}
        # language=sh
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: 'Init composer dep cache'
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "composer-${{ runner.os }}-${{ inputs.php-version }}-${{ steps.vars.outputs.phpunit-version }}-${{ hashFiles('composer.lock') }}"

      - name: 'Install composer deps'
        shell: bash -e {0}
        # language=sh
        run: |
          rm composer.lock
          composer update --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: 'Save composer dep cache'
        if: steps.cache.outputs.cache-hit != 'true' && steps.cache.outputs.cache-hit != true
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "composer-${{ runner.os }}-${{ inputs.php-version }}-${{ steps.vars.outputs.phpunit-version }}-${{ hashFiles('composer.lock') }}"

      - name: 'Install Consul'
        # language=bash
        run: |
          wget https://releases.hashicorp.com/consul/${{ env.CONSUL_VERSION }}/consul_${{ env.CONSUL_VERSION }}_linux_amd64.zip
          unzip consul_${{ env.CONSUL_VERSION }}_linux_amd64.zip -d /usr/local/bin/
          rm consul_${{ env.CONSUL_VERSION }}_linux_amd64.zip
          chmod +x /usr/local/bin/consul
          consul --version

      - name: 'Execute tests'
        # language=bash
        run: |
          ./vendor/bin/phpunit -c phpunit.xml
